{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MachineLearning_semana6_16_08_2022","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOCvtqIYNbzHF9p9ASI06Y8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"e5rjyeeKByYZ","executionInfo":{"status":"ok","timestamp":1660693243558,"user_tz":180,"elapsed":1457,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import confusion_matrix\n","from sklearn import preprocessing"]},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"CSWO87FfB9s3","executionInfo":{"status":"ok","timestamp":1660693284862,"user_tz":180,"elapsed":9632,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"4ad6d2ab-7c45-4a76-ad72-b519d526f974"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-6cccc644-ecf8-423f-a4d6-462bd9baaa0b\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-6cccc644-ecf8-423f-a4d6-462bd9baaa0b\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Iris.csv to Iris.csv\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('Iris.csv')"],"metadata":{"id":"_ATfbck-B90A","executionInfo":{"status":"ok","timestamp":1660693294025,"user_tz":180,"elapsed":306,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.sample(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"nGNqgCeGB98C","executionInfo":{"status":"ok","timestamp":1660693521444,"user_tz":180,"elapsed":308,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"bf26ffb9-64a1-4656-c8a7-74545e520cea"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  \\\n","121  122            5.6           2.8            4.9           2.0   \n","53    54            5.5           2.3            4.0           1.3   \n","61    62            5.9           3.0            4.2           1.5   \n","148  149            6.2           3.4            5.4           2.3   \n","39    40            5.1           3.4            1.5           0.2   \n","\n","             Species  \n","121   Iris-virginica  \n","53   Iris-versicolor  \n","61   Iris-versicolor  \n","148   Iris-virginica  \n","39       Iris-setosa  "],"text/html":["\n","  <div id=\"df-6f12a727-4b73-4717-9cf0-2febf0a8c2b2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>121</th>\n","      <td>122</td>\n","      <td>5.6</td>\n","      <td>2.8</td>\n","      <td>4.9</td>\n","      <td>2.0</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>54</td>\n","      <td>5.5</td>\n","      <td>2.3</td>\n","      <td>4.0</td>\n","      <td>1.3</td>\n","      <td>Iris-versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>62</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>4.2</td>\n","      <td>1.5</td>\n","      <td>Iris-versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>149</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>40</td>\n","      <td>5.1</td>\n","      <td>3.4</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f12a727-4b73-4717-9cf0-2febf0a8c2b2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6f12a727-4b73-4717-9cf0-2febf0a8c2b2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6f12a727-4b73-4717-9cf0-2febf0a8c2b2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mDsA9UZjB-B4","executionInfo":{"status":"ok","timestamp":1660693533424,"user_tz":180,"elapsed":346,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"19da05f4-6591-495c-f95b-c974e691e894"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Id', 'SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm',\n","       'Species'],\n","      dtype='object')"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2otoD1BdDFnV","executionInfo":{"status":"ok","timestamp":1660693543312,"user_tz":180,"elapsed":2,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"911d70e3-a255-4de4-ab44-bc4a98ed6ae0"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(150, 6)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kQQiX3zZDFqi","executionInfo":{"status":"ok","timestamp":1660693553633,"user_tz":180,"elapsed":296,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"ffc472a2-168a-4369-f69f-69f15ded8eba"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of       Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  \\\n","0      1            5.1           3.5            1.4           0.2   \n","1      2            4.9           3.0            1.4           0.2   \n","2      3            4.7           3.2            1.3           0.2   \n","3      4            4.6           3.1            1.5           0.2   \n","4      5            5.0           3.6            1.4           0.2   \n","..   ...            ...           ...            ...           ...   \n","145  146            6.7           3.0            5.2           2.3   \n","146  147            6.3           2.5            5.0           1.9   \n","147  148            6.5           3.0            5.2           2.0   \n","148  149            6.2           3.4            5.4           2.3   \n","149  150            5.9           3.0            5.1           1.8   \n","\n","            Species  \n","0       Iris-setosa  \n","1       Iris-setosa  \n","2       Iris-setosa  \n","3       Iris-setosa  \n","4       Iris-setosa  \n","..              ...  \n","145  Iris-virginica  \n","146  Iris-virginica  \n","147  Iris-virginica  \n","148  Iris-virginica  \n","149  Iris-virginica  \n","\n","[150 rows x 6 columns]>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.describe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oferRyYsDFs7","executionInfo":{"status":"ok","timestamp":1660693564840,"user_tz":180,"elapsed":307,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"fb5e18eb-46b8-42bb-e8af-7aa16ebf6cd4"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.describe of       Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  \\\n","0      1            5.1           3.5            1.4           0.2   \n","1      2            4.9           3.0            1.4           0.2   \n","2      3            4.7           3.2            1.3           0.2   \n","3      4            4.6           3.1            1.5           0.2   \n","4      5            5.0           3.6            1.4           0.2   \n","..   ...            ...           ...            ...           ...   \n","145  146            6.7           3.0            5.2           2.3   \n","146  147            6.3           2.5            5.0           1.9   \n","147  148            6.5           3.0            5.2           2.0   \n","148  149            6.2           3.4            5.4           2.3   \n","149  150            5.9           3.0            5.1           1.8   \n","\n","            Species  \n","0       Iris-setosa  \n","1       Iris-setosa  \n","2       Iris-setosa  \n","3       Iris-setosa  \n","4       Iris-setosa  \n","..              ...  \n","145  Iris-virginica  \n","146  Iris-virginica  \n","147  Iris-virginica  \n","148  Iris-virginica  \n","149  Iris-virginica  \n","\n","[150 rows x 6 columns]>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#Gerando Atributos descritivos \n","\n","X = df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]"],"metadata":{"id":"zAxDbifyDFvu","executionInfo":{"status":"ok","timestamp":1660693587844,"user_tz":180,"elapsed":7,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["##Vetor de Targets\n","from sklearn import preprocessing\n","le = preprocessing.LabelEncoder()\n","y = le.fit_transform(df['Species'])\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LPUppyfFDFyK","executionInfo":{"status":"ok","timestamp":1660693611644,"user_tz":180,"elapsed":299,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"209c96a1-749d-4524-9317-c3bdc038ba7d"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score"],"metadata":{"id":"MPRTaA_ODF08","executionInfo":{"status":"ok","timestamp":1660693678148,"user_tz":180,"elapsed":6,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["#Gerando lista de dicionarios\n","\n","scores_para_df = []\n","\n","dict_row_score = {}"],"metadata":{"id":"kve4qk2VDpcR","executionInfo":{"status":"ok","timestamp":1660693701358,"user_tz":180,"elapsed":2,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# range(1,100,5)\n","for i in range(1, 100, 5):\n","    \n","    # instanciando os hiperparametros\n","    model = KNeighborsClassifier(n_neighbors = i)\n","    \n","    # cv forma um array de 5 partições\n","    cv_scores = cross_val_score(model, \n","                                X, \n","                                y, \n","                                cv = 5\n","                               )\n","\n","    # Para cada valor de n_neighbours, um dicionario com média, erro e valores\n","    dict_row_score = {'score_medio':np.mean(cv_scores), \n","                      'score_std':np.std(cv_scores),\n","                      'error': 1 - np.mean(cross_val_score(model, X, y, cv = 5)),\n","                      'n_neighbours': i\n","                     }\n","    \n","    # salvar a lista\n","    scores_para_df.append(dict_row_score)\n","    "],"metadata":{"id":"YaXD8LhrDF3Q","executionInfo":{"status":"ok","timestamp":1660693788616,"user_tz":180,"elapsed":1383,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Criar o DataFrame com os dicionarios\n","df_scores = pd.DataFrame(scores_para_df)\n","df_scores"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"WBO9dfY0DF6B","executionInfo":{"status":"ok","timestamp":1660693808756,"user_tz":180,"elapsed":317,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"e0200453-68e0-4233-f878-b3d548334f22"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    score_medio  score_std     error  n_neighbours\n","0      0.960000   0.024944  0.040000             1\n","1      0.980000   0.016330  0.020000             6\n","2      0.980000   0.026667  0.020000            11\n","3      0.966667   0.029814  0.033333            16\n","4      0.966667   0.029814  0.033333            21\n","5      0.946667   0.033993  0.053333            26\n","6      0.933333   0.042164  0.066667            31\n","7      0.953333   0.026667  0.046667            36\n","8      0.940000   0.032660  0.060000            41\n","9      0.933333   0.029814  0.066667            46\n","10     0.920000   0.016330  0.080000            51\n","11     0.893333   0.038873  0.106667            56\n","12     0.893333   0.048990  0.106667            61\n","13     0.880000   0.033993  0.120000            66\n","14     0.886667   0.040000  0.113333            71\n","15     0.880000   0.033993  0.120000            76\n","16     0.660000   0.013333  0.340000            81\n","17     0.660000   0.013333  0.340000            86\n","18     0.660000   0.013333  0.340000            91\n","19     0.660000   0.013333  0.340000            96"],"text/html":["\n","  <div id=\"df-34e76285-175c-4179-9baf-a5d27c48efe7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score_medio</th>\n","      <th>score_std</th>\n","      <th>error</th>\n","      <th>n_neighbours</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.960000</td>\n","      <td>0.024944</td>\n","      <td>0.040000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.980000</td>\n","      <td>0.016330</td>\n","      <td>0.020000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.980000</td>\n","      <td>0.026667</td>\n","      <td>0.020000</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.966667</td>\n","      <td>0.029814</td>\n","      <td>0.033333</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.966667</td>\n","      <td>0.029814</td>\n","      <td>0.033333</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.946667</td>\n","      <td>0.033993</td>\n","      <td>0.053333</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.933333</td>\n","      <td>0.042164</td>\n","      <td>0.066667</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.953333</td>\n","      <td>0.026667</td>\n","      <td>0.046667</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.940000</td>\n","      <td>0.032660</td>\n","      <td>0.060000</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.933333</td>\n","      <td>0.029814</td>\n","      <td>0.066667</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.920000</td>\n","      <td>0.016330</td>\n","      <td>0.080000</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.893333</td>\n","      <td>0.038873</td>\n","      <td>0.106667</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.893333</td>\n","      <td>0.048990</td>\n","      <td>0.106667</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.880000</td>\n","      <td>0.033993</td>\n","      <td>0.120000</td>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.886667</td>\n","      <td>0.040000</td>\n","      <td>0.113333</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.880000</td>\n","      <td>0.033993</td>\n","      <td>0.120000</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.660000</td>\n","      <td>0.013333</td>\n","      <td>0.340000</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.660000</td>\n","      <td>0.013333</td>\n","      <td>0.340000</td>\n","      <td>86</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.660000</td>\n","      <td>0.013333</td>\n","      <td>0.340000</td>\n","      <td>91</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.660000</td>\n","      <td>0.013333</td>\n","      <td>0.340000</td>\n","      <td>96</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34e76285-175c-4179-9baf-a5d27c48efe7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-34e76285-175c-4179-9baf-a5d27c48efe7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-34e76285-175c-4179-9baf-a5d27c48efe7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df_scores['limite_inferior'] = df_scores['score_medio'] - df_scores['score_std']\n","df_scores['limite_superior'] = df_scores['score_medio'] + df_scores['score_std']"],"metadata":{"id":"IulNeSR0DF8V","executionInfo":{"status":"ok","timestamp":1660693819084,"user_tz":180,"elapsed":4,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["df_scores.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dU8A8c49DF_B","executionInfo":{"status":"ok","timestamp":1660693827126,"user_tz":180,"elapsed":19,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"c2b37bd0-3256-47ed-ec07-5fa62aed7524"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   score_medio  score_std     error  n_neighbours  limite_inferior  \\\n","0     0.960000   0.024944  0.040000             1         0.935056   \n","1     0.980000   0.016330  0.020000             6         0.963670   \n","2     0.980000   0.026667  0.020000            11         0.953333   \n","3     0.966667   0.029814  0.033333            16         0.936852   \n","4     0.966667   0.029814  0.033333            21         0.936852   \n","\n","   limite_superior  \n","0         0.984944  \n","1         0.996330  \n","2         1.006667  \n","3         0.996481  \n","4         0.996481  "],"text/html":["\n","  <div id=\"df-a723e93f-c1a9-4c62-8df3-91f7758028d7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score_medio</th>\n","      <th>score_std</th>\n","      <th>error</th>\n","      <th>n_neighbours</th>\n","      <th>limite_inferior</th>\n","      <th>limite_superior</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.960000</td>\n","      <td>0.024944</td>\n","      <td>0.040000</td>\n","      <td>1</td>\n","      <td>0.935056</td>\n","      <td>0.984944</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.980000</td>\n","      <td>0.016330</td>\n","      <td>0.020000</td>\n","      <td>6</td>\n","      <td>0.963670</td>\n","      <td>0.996330</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.980000</td>\n","      <td>0.026667</td>\n","      <td>0.020000</td>\n","      <td>11</td>\n","      <td>0.953333</td>\n","      <td>1.006667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.966667</td>\n","      <td>0.029814</td>\n","      <td>0.033333</td>\n","      <td>16</td>\n","      <td>0.936852</td>\n","      <td>0.996481</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.966667</td>\n","      <td>0.029814</td>\n","      <td>0.033333</td>\n","      <td>21</td>\n","      <td>0.936852</td>\n","      <td>0.996481</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a723e93f-c1a9-4c62-8df3-91f7758028d7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a723e93f-c1a9-4c62-8df3-91f7758028d7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a723e93f-c1a9-4c62-8df3-91f7758028d7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["##plotando dicionarios com limitação \n","\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","plt.plot(df_scores['n_neighbours'],df_scores['limite_inferior'], color = 'r')\n","plt.plot(df_scores['n_neighbours'],df_scores['score_medio'], color = 'b')\n","plt.plot(df_scores['n_neighbours'],df_scores['limite_superior'], color = 'r');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"JsI7oXccENYd","executionInfo":{"status":"ok","timestamp":1660693840720,"user_tz":180,"elapsed":764,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"7cf21d80-d259-450d-da78-b8bb6bcf5782"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Utilizar sklearn para deixar as matrizes de forma padrão\n","from sklearn import preprocessing\n","X = df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]\n","X = preprocessing.scale(X, axis = 0)\n","#print(X)"],"metadata":{"id":"TFP-rKz-ENbB","executionInfo":{"status":"ok","timestamp":1660693883755,"user_tz":180,"elapsed":291,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Verificar se as colunas têm média 0 e desvio 1.\n","print('media:',np.mean(X[:,1]))\n","print('desvio:',np.std(X[:,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TmvddyQ_ENd5","executionInfo":{"status":"ok","timestamp":1660693893216,"user_tz":180,"elapsed":302,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"02aadadf-bcb7-4383-d0a4-20a17565db90"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["media: -6.631732200427602e-16\n","desvio: 0.9999999999999999\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score\n"],"metadata":{"id":"zegw3KiQENgH","executionInfo":{"status":"ok","timestamp":1660693907338,"user_tz":180,"elapsed":8,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["#calcular scores com validacao cruzada sobre os valores padronizados\n","\n","\n","scores_para_df_standar = []\n","\n","error_rates = {}"],"metadata":{"id":"EB220UPEENiy","executionInfo":{"status":"ok","timestamp":1660693944399,"user_tz":180,"elapsed":1,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["for i in range(1, 100, 5):\n","    \n","    model = KNeighborsClassifier(n_neighbors = i)\n","    \n","    cv_scores = cross_val_score(model, \n","                                X, \n","                                y, \n","                                cv = 5\n","                               )\n","    \n","    dict_row_score = {'score_medio':np.mean(cv_scores), \n","                      'score_std':np.std(cv_scores),\n","                       'error': 1 - np.mean(cross_val_score(model, X, y, cv = 5)),\n","                      'n_neighbours': i\n","                     }\n","    \n","    scores_para_df_standar.append(dict_row_score)"],"metadata":{"id":"ITjp2dSHENlV","executionInfo":{"status":"ok","timestamp":1660693956568,"user_tz":180,"elapsed":1291,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["df_scores_standar = pd.DataFrame(scores_para_df_standar)\n","df_scores_standar"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"rPcFxQlnENoC","executionInfo":{"status":"ok","timestamp":1660694045051,"user_tz":180,"elapsed":19,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"8e757b8e-fb3f-4ac2-b3d6-36f4706789f5"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    score_medio  score_std     error  n_neighbours\n","0      0.946667   0.033993  0.053333             1\n","1      0.966667   0.036515  0.033333             6\n","2      0.940000   0.038873  0.060000            11\n","3      0.933333   0.047140  0.066667            16\n","4      0.946667   0.040000  0.053333            21\n","5      0.933333   0.042164  0.066667            26\n","6      0.933333   0.042164  0.066667            31\n","7      0.906667   0.038873  0.093333            36\n","8      0.880000   0.033993  0.120000            41\n","9      0.873333   0.048990  0.126667            46\n","10     0.860000   0.053333  0.140000            51\n","11     0.866667   0.047140  0.133333            56\n","12     0.846667   0.040000  0.153333            61\n","13     0.853333   0.033993  0.146667            66\n","14     0.846667   0.033993  0.153333            71\n","15     0.826667   0.038873  0.173333            76\n","16     0.706667   0.077172  0.293333            81\n","17     0.673333   0.044222  0.326667            86\n","18     0.660000   0.048990  0.340000            91\n","19     0.653333   0.045216  0.346667            96"],"text/html":["\n","  <div id=\"df-6f09ef09-6bc1-4a6b-a52c-904abaca99fa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score_medio</th>\n","      <th>score_std</th>\n","      <th>error</th>\n","      <th>n_neighbours</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.946667</td>\n","      <td>0.033993</td>\n","      <td>0.053333</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.966667</td>\n","      <td>0.036515</td>\n","      <td>0.033333</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.940000</td>\n","      <td>0.038873</td>\n","      <td>0.060000</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.933333</td>\n","      <td>0.047140</td>\n","      <td>0.066667</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.946667</td>\n","      <td>0.040000</td>\n","      <td>0.053333</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.933333</td>\n","      <td>0.042164</td>\n","      <td>0.066667</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.933333</td>\n","      <td>0.042164</td>\n","      <td>0.066667</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.906667</td>\n","      <td>0.038873</td>\n","      <td>0.093333</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.880000</td>\n","      <td>0.033993</td>\n","      <td>0.120000</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.873333</td>\n","      <td>0.048990</td>\n","      <td>0.126667</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.860000</td>\n","      <td>0.053333</td>\n","      <td>0.140000</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.866667</td>\n","      <td>0.047140</td>\n","      <td>0.133333</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.846667</td>\n","      <td>0.040000</td>\n","      <td>0.153333</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.853333</td>\n","      <td>0.033993</td>\n","      <td>0.146667</td>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.846667</td>\n","      <td>0.033993</td>\n","      <td>0.153333</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.826667</td>\n","      <td>0.038873</td>\n","      <td>0.173333</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.706667</td>\n","      <td>0.077172</td>\n","      <td>0.293333</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.673333</td>\n","      <td>0.044222</td>\n","      <td>0.326667</td>\n","      <td>86</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.660000</td>\n","      <td>0.048990</td>\n","      <td>0.340000</td>\n","      <td>91</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.653333</td>\n","      <td>0.045216</td>\n","      <td>0.346667</td>\n","      <td>96</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f09ef09-6bc1-4a6b-a52c-904abaca99fa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6f09ef09-6bc1-4a6b-a52c-904abaca99fa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6f09ef09-6bc1-4a6b-a52c-904abaca99fa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# limites gráficos\n","df_scores_standar['limite_superior'] = df_scores_standar['score_medio'] + df_scores_standar['score_std']\n","df_scores_standar['limite_inferior'] = df_scores_standar['score_medio'] - df_scores_standar['score_std']"],"metadata":{"id":"9OXFOReqENqr","executionInfo":{"status":"ok","timestamp":1660694062974,"user_tz":180,"elapsed":278,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["# Demonstrar valor ideal\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","plt.plot(df_scores_standar['n_neighbours'],df_scores_standar['limite_inferior'],color = 'r')\n","plt.plot(df_scores_standar['n_neighbours'],df_scores_standar['score_medio'],color = 'b')\n","plt.plot(df_scores_standar['n_neighbours'],df_scores_standar['limite_superior'],color = 'r');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"JJbFfOwiENtf","executionInfo":{"status":"ok","timestamp":1660694080779,"user_tz":180,"elapsed":332,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"e21b531c-f78b-4708-866f-86b28226219b"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X,y)"],"metadata":{"id":"agYHVcvhENwB","executionInfo":{"status":"ok","timestamp":1660694116214,"user_tz":180,"elapsed":282,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["# Escolher o modelo ideal que foi indicado pela validação cruzada\n","model = KNeighborsClassifier(n_neighbors = 6) #6 é o que retorna menor erro\n","\n","# Ajustá-lo sobre os dados de treinamento\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BnzF2i9iENyn","executionInfo":{"status":"ok","timestamp":1660694124943,"user_tz":180,"elapsed":309,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"7446345a-1270-49c5-bc02-ef21d047344e"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=6)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# Ele é utilizado para prever em teste\n","y_pred = model.predict(X_test)"],"metadata":{"id":"eBY_xCA8EN1V","executionInfo":{"status":"ok","timestamp":1660694134496,"user_tz":180,"elapsed":298,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["# matriz de confusão:\n","from sklearn.metrics import confusion_matrix\n","\n","confusion_matrix(y_test, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L5IGK2xoEN3r","executionInfo":{"status":"ok","timestamp":1660694147795,"user_tz":180,"elapsed":3,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"e0885d0f-d898-4e4c-c854-ebc77f544077"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[10,  0,  0],\n","       [ 0, 14,  0],\n","       [ 0,  2, 12]])"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["import seaborn as sns; sns.set()\n","from sklearn.metrics import confusion_matrix\n","\n","mat = confusion_matrix(y_test, y_pred\n","                      )\n","sns.heatmap(mat.T, \n","            square = True, \n","            annot = True, \n","            fmt = 'd', \n","            cbar = True\n","           )\n","\n","plt.ylabel('Verdadeiros')\n","plt.xlabel('Previstos');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":289},"id":"lwMl4r6XEN6u","executionInfo":{"status":"ok","timestamp":1660694159846,"user_tz":180,"elapsed":931,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"c06678f6-b8ce-46c7-85d2-698ca753bd49"},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HqrPcQs_FfDa","executionInfo":{"status":"ok","timestamp":1660694176907,"user_tz":180,"elapsed":4,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"cf613788-fd59-4281-e0b7-4b9468cbb69e"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9473684210526315"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["### Importar os pacotes a serem usados\n","import statsmodels.api as sm\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, classification_report\n","from sklearn.model_selection import train_test_split\n","%pylab inline"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2k77KF-gFfGW","executionInfo":{"status":"ok","timestamp":1660694190247,"user_tz":180,"elapsed":1205,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"fedb2a99-1b97-4c28-cea2-3f5c2a9aee2f"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"]},{"output_type":"stream","name":"stdout","text":["Populating the interactive namespace from numpy and matplotlib\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/IPython/core/magics/pylab.py:160: UserWarning: pylab import has clobbered these variables: ['mat']\n","`%matplotlib` prevents importing * from pylab and numpy\n","  \"\\n`%matplotlib` prevents importing * from pylab and numpy\"\n"]}]},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"jG3RCJAKFfJC","executionInfo":{"status":"ok","timestamp":1660694209718,"user_tz":180,"elapsed":8997,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"9675cb1a-fd48-49f1-d33f-c227a83904e4"},"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-6ebf4407-c946-4681-bd12-b29cd6be2f16\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-6ebf4407-c946-4681-bd12-b29cd6be2f16\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving cancer-prostate.csv to cancer-prostate.csv\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('cancer-prostate.csv')"],"metadata":{"id":"nXcG-aCBFfLa","executionInfo":{"status":"ok","timestamp":1660694235164,"user_tz":180,"elapsed":312,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["df = df[['radius', 'texture', 'perimeter', 'area', 'smoothness', 'compactness', 'symmetry', 'fractal_dimension', 'diagnosis_result']]\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Bg3I6S-gFfOR","executionInfo":{"status":"ok","timestamp":1660694250014,"user_tz":180,"elapsed":7,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"27f703e1-e93c-4954-dc5c-75bf0d79e0c0"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   radius  texture  perimeter  area  smoothness  compactness  symmetry  \\\n","0      23       12        151   954       0.143        0.278     0.242   \n","1       9       13        133  1326       0.143        0.079     0.181   \n","2      21       27        130  1203       0.125        0.160     0.207   \n","3      14       16         78   386       0.070        0.284     0.260   \n","4       9       19        135  1297       0.141        0.133     0.181   \n","\n","   fractal_dimension diagnosis_result  \n","0              0.079                M  \n","1              0.057                B  \n","2              0.060                M  \n","3              0.097                M  \n","4              0.059                M  "],"text/html":["\n","  <div id=\"df-367ba661-ebf1-48f8-aab6-add141fd046d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>radius</th>\n","      <th>texture</th>\n","      <th>perimeter</th>\n","      <th>area</th>\n","      <th>smoothness</th>\n","      <th>compactness</th>\n","      <th>symmetry</th>\n","      <th>fractal_dimension</th>\n","      <th>diagnosis_result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23</td>\n","      <td>12</td>\n","      <td>151</td>\n","      <td>954</td>\n","      <td>0.143</td>\n","      <td>0.278</td>\n","      <td>0.242</td>\n","      <td>0.079</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9</td>\n","      <td>13</td>\n","      <td>133</td>\n","      <td>1326</td>\n","      <td>0.143</td>\n","      <td>0.079</td>\n","      <td>0.181</td>\n","      <td>0.057</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>130</td>\n","      <td>1203</td>\n","      <td>0.125</td>\n","      <td>0.160</td>\n","      <td>0.207</td>\n","      <td>0.060</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14</td>\n","      <td>16</td>\n","      <td>78</td>\n","      <td>386</td>\n","      <td>0.070</td>\n","      <td>0.284</td>\n","      <td>0.260</td>\n","      <td>0.097</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>19</td>\n","      <td>135</td>\n","      <td>1297</td>\n","      <td>0.141</td>\n","      <td>0.133</td>\n","      <td>0.181</td>\n","      <td>0.059</td>\n","      <td>M</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-367ba661-ebf1-48f8-aab6-add141fd046d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-367ba661-ebf1-48f8-aab6-add141fd046d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-367ba661-ebf1-48f8-aab6-add141fd046d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["df['diagnosis_result'][df['diagnosis_result'] == 'M'] = 1\n","df['diagnosis_result'][df['diagnosis_result'] == 'B'] = 0\n","df['diagnosis_result'] = df['diagnosis_result'].astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N_hXiUq5FfRH","executionInfo":{"status":"ok","timestamp":1660694260137,"user_tz":180,"elapsed":12,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"e1456ca6-1e77-46d1-e97b-85308b8eac11"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wDCPxgQ2FfTr","executionInfo":{"status":"ok","timestamp":1660694284618,"user_tz":180,"elapsed":8,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"cc8a07b5-2301-4eec-cf86-c6169a2a085a"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   radius  texture  perimeter  area  smoothness  compactness  symmetry  \\\n","0      23       12        151   954       0.143        0.278     0.242   \n","1       9       13        133  1326       0.143        0.079     0.181   \n","2      21       27        130  1203       0.125        0.160     0.207   \n","3      14       16         78   386       0.070        0.284     0.260   \n","4       9       19        135  1297       0.141        0.133     0.181   \n","\n","   fractal_dimension  diagnosis_result  \n","0              0.079                 1  \n","1              0.057                 0  \n","2              0.060                 1  \n","3              0.097                 1  \n","4              0.059                 1  "],"text/html":["\n","  <div id=\"df-49a886df-818b-4676-979d-ff49a3da2679\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>radius</th>\n","      <th>texture</th>\n","      <th>perimeter</th>\n","      <th>area</th>\n","      <th>smoothness</th>\n","      <th>compactness</th>\n","      <th>symmetry</th>\n","      <th>fractal_dimension</th>\n","      <th>diagnosis_result</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23</td>\n","      <td>12</td>\n","      <td>151</td>\n","      <td>954</td>\n","      <td>0.143</td>\n","      <td>0.278</td>\n","      <td>0.242</td>\n","      <td>0.079</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9</td>\n","      <td>13</td>\n","      <td>133</td>\n","      <td>1326</td>\n","      <td>0.143</td>\n","      <td>0.079</td>\n","      <td>0.181</td>\n","      <td>0.057</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>130</td>\n","      <td>1203</td>\n","      <td>0.125</td>\n","      <td>0.160</td>\n","      <td>0.207</td>\n","      <td>0.060</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14</td>\n","      <td>16</td>\n","      <td>78</td>\n","      <td>386</td>\n","      <td>0.070</td>\n","      <td>0.284</td>\n","      <td>0.260</td>\n","      <td>0.097</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>19</td>\n","      <td>135</td>\n","      <td>1297</td>\n","      <td>0.141</td>\n","      <td>0.133</td>\n","      <td>0.181</td>\n","      <td>0.059</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49a886df-818b-4676-979d-ff49a3da2679')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-49a886df-818b-4676-979d-ff49a3da2679 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-49a886df-818b-4676-979d-ff49a3da2679');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["#atributos descritivos\n","X = df[['radius', 'texture', 'perimeter', 'area', 'smoothness', 'compactness', 'symmetry', 'fractal_dimension']]\n","X = preprocessing.scale(X, axis = 0)\n","X = pd.DataFrame(X)\n","# targets\n","le = preprocessing.LabelEncoder()\n","y = le.fit_transform(df['diagnosis_result'])\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DqRGhwJNFfV9","executionInfo":{"status":"ok","timestamp":1660694309003,"user_tz":180,"elapsed":275,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"eb5ecd26-aa48-4a95-80f0-db65114716e5"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 0 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 0 1 0 1 1\n"," 0 1 0 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1]\n"]}]},{"cell_type":"code","source":["with sns.axes_style(\"white\"):\n","    f, ax = plt.subplots(figsize = (10, 10))\n","    ax = sns.heatmap(df.corr(method = 'spearman').iloc[0:len(df), \n","                                                       0:len(df) ], \n","            annot = True,\n","            cmap = \"YlGnBu\"\n","                    )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":687},"id":"kK5w46SiFfYs","executionInfo":{"status":"ok","timestamp":1660694319734,"user_tz":180,"elapsed":1308,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"a675b1ea-75af-4cf3-90d8-207f8c6257f0"},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import KFold\n","from sklearn.metrics import confusion_matrix \n","\n","kf = KFold(n_splits = 10)\n","\n","logit = LogisticRegression()\n","\n","kf_y_preds = []\n","kf_model = []\n","kf_scores = []\n","kf_matrix = []\n","\n","#para cada fold e cada subset (train e test)\n","for k, (train_index, test_index) in enumerate(kf.split(X)):\n","    \n","    #train model de acordo com subset\n","    model = logit.fit(X.iloc[train_index], \n","                      y[train_index]\n","                     )\n","    kf_model.append(model)\n","  \n","    \n","    y_preds = model.predict(X.iloc[test_index])\n","    \n","    scores = accuracy_score(y[test_index],\n","                            y_preds\n","                           )\n","    \n","    kf_scores.append(scores)\n","    \n","    matrix = confusion_matrix(y[test_index], \n","                              y_preds\n","                             )\n","    \n","    kf_matrix.append(matrix)\n","    \n","    print(\"K\", k, \" = \", scores, sep = \"\")   "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LEu8q4_OFfbJ","executionInfo":{"status":"ok","timestamp":1660694405032,"user_tz":180,"elapsed":281,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"6f986708-5f2c-476f-a641-f0f077be4a82"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["K0 = 0.7\n","K1 = 0.8\n","K2 = 1.0\n","K3 = 0.8\n","K4 = 0.6\n","K5 = 1.0\n","K6 = 0.9\n","K7 = 1.0\n","K8 = 0.8\n","K9 = 0.9\n"]}]},{"cell_type":"code","source":["mean(kf_scores)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W2AgXb5RFfdx","executionInfo":{"status":"ok","timestamp":1660694417037,"user_tz":180,"elapsed":290,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"04adaefb-dc4b-488d-f255-0ffaafd94710"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.85"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y)"],"metadata":{"id":"znw9VP7DFfgk","executionInfo":{"status":"ok","timestamp":1660694425310,"user_tz":180,"elapsed":286,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["reglogsklearn = LogisticRegression(fit_intercept = True, \n","                                   penalty = 'l2', \n","                                   C = 1e10)\n","\n","reglogsklearn.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D7a2z69KFfjR","executionInfo":{"status":"ok","timestamp":1660694433886,"user_tz":180,"elapsed":279,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"5f804d2d-40d7-44e6-cc11-7c83f65aaae8"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=10000000000.0)"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["reglogsklearn.intercept_, reglogsklearn.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eawqH7LGGhVu","executionInfo":{"status":"ok","timestamp":1660694447752,"user_tz":180,"elapsed":282,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"53534405-35ee-4503-fea9-3453a1dab802"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([0.95550462]),\n"," array([[-0.30359948,  0.52257516,  1.75426701, -0.92721393, -0.25346085,\n","          2.58796583, -0.17449887, -1.23112573]]))"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["y_pred2 = reglogsklearn.predict(X_test)\n","accuracy_score(y_test, y_pred2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3c_o-olKGhY3","executionInfo":{"status":"ok","timestamp":1660694457836,"user_tz":180,"elapsed":9,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"aa9a06d8-f20d-4794-bd36-24d9b0aa652a"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.92"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["confusion_matrix(y_test, y_pred2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N9sujQa7Ghbe","executionInfo":{"status":"ok","timestamp":1660694465988,"user_tz":180,"elapsed":298,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"34684681-4c11-4fb3-ead5-7a30d9c47221"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 7,  1],\n","       [ 1, 16]])"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["np.sum(y_test == y_pred2)/len(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mmbsfil0GheE","executionInfo":{"status":"ok","timestamp":1660694473788,"user_tz":180,"elapsed":280,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"fc1e4b94-77a4-416b-8d24-7e6ae9414814"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.92"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["from sklearn.metrics import precision_score, recall_score, roc_curve, auc, accuracy_score\n","fpr_log, tpr_log, thr_log = roc_curve(y_test, \n","                                    y_pred2\n","                                   )"],"metadata":{"id":"TMYbDcQ5Ghg3","executionInfo":{"status":"ok","timestamp":1660694485268,"user_tz":180,"elapsed":7,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["df_roc = pd.DataFrame(dict(fpr = fpr_log, \n","                       tpr = tpr_log, \n","                       thr = thr_log\n","                      )\n","                 )"],"metadata":{"id":"UWywk4EdGhjY","executionInfo":{"status":"ok","timestamp":1660694493099,"user_tz":180,"elapsed":318,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["plt.axis([0, 1.01, 0, 1.01])\n","\n","plt.xlabel('1 - Specificty')\n","\n","plt.ylabel('TPR / Sensitivity')\n","\n","plt.title('ROC Curve')\n","\n","plt.plot(df_roc['fpr'],\n","         df_roc['tpr']\n","        )\n","\n","plt.plot(np.arange(0,1, \n","                   step = 0.01\n","                  ), \n","         np.arange(0,1, \n","                   step = 0.01\n","                  )\n","        )\n","\n","plt.legend(['Log Regression'])\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"YxsY480cGhqu","executionInfo":{"status":"ok","timestamp":1660694501867,"user_tz":180,"elapsed":816,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"09ba2a15-bfbf-463d-d7b5-ab461c79efb8"},"execution_count":51,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["print('AUC=', auc(fpr_log, \n","                  tpr_log\n","                 )\n","     )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mqx1d8OZGhuE","executionInfo":{"status":"ok","timestamp":1660694582110,"user_tz":180,"elapsed":290,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"10017278-56e4-460e-c212-d8a2d05cea32"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["AUC= 0.9080882352941176\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.metrics import accuracy_score\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"jCFH5Sv1Ffl1","executionInfo":{"status":"ok","timestamp":1660694592288,"user_tz":180,"elapsed":366,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"ZS32ZdWeFfoO","executionInfo":{"status":"ok","timestamp":1660694641609,"user_tz":180,"elapsed":34240,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"c601dcda-deb2-4833-8041-00b016d444f5"},"execution_count":54,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-a799f89f-aa68-436e-a56d-8fdab7b024e4\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-a799f89f-aa68-436e-a56d-8fdab7b024e4\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving diabetes.csv to diabetes.csv\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('diabetes.csv')"],"metadata":{"id":"Pu18jO-cFfq5","executionInfo":{"status":"ok","timestamp":1660694656775,"user_tz":180,"elapsed":299,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":655},"id":"0habEZ_kHX7f","executionInfo":{"status":"ok","timestamp":1660694670686,"user_tz":180,"elapsed":294,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"8dc96d86-0498-4605-ca52-d14c0fd04845"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0              6      148             72             35        0  33.6   \n","1              1       85             66             29        0  26.6   \n","2              8      183             64              0        0  23.3   \n","3              1       89             66             23       94  28.1   \n","4              0      137             40             35      168  43.1   \n","..           ...      ...            ...            ...      ...   ...   \n","763           10      101             76             48      180  32.9   \n","764            2      122             70             27        0  36.8   \n","765            5      121             72             23      112  26.2   \n","766            1      126             60              0        0  30.1   \n","767            1       93             70             31        0  30.4   \n","\n","     DiabetesPedigreeFunction  Age  Outcome  \n","0                       0.627   50        1  \n","1                       0.351   31        0  \n","2                       0.672   32        1  \n","3                       0.167   21        0  \n","4                       2.288   33        1  \n","..                        ...  ...      ...  \n","763                     0.171   63        0  \n","764                     0.340   27        0  \n","765                     0.245   30        0  \n","766                     0.349   47        1  \n","767                     0.315   23        0  \n","\n","[768 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-d7be8482-0a81-4791-9fdd-9b82ae43b6ad\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>76</td>\n","      <td>48</td>\n","      <td>180</td>\n","      <td>32.9</td>\n","      <td>0.171</td>\n","      <td>63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>36.8</td>\n","      <td>0.340</td>\n","      <td>27</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>5</td>\n","      <td>121</td>\n","      <td>72</td>\n","      <td>23</td>\n","      <td>112</td>\n","      <td>26.2</td>\n","      <td>0.245</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.1</td>\n","      <td>0.349</td>\n","      <td>47</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>70</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>30.4</td>\n","      <td>0.315</td>\n","      <td>23</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7be8482-0a81-4791-9fdd-9b82ae43b6ad')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d7be8482-0a81-4791-9fdd-9b82ae43b6ad button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d7be8482-0a81-4791-9fdd-9b82ae43b6ad');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["X = df.drop('Outcome', axis = 1)\n","y = df['Outcome']"],"metadata":{"id":"bjBJVULCHX-y","executionInfo":{"status":"ok","timestamp":1660694824980,"user_tz":180,"elapsed":303,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)"],"metadata":{"id":"ErYitMBNHYCw","executionInfo":{"status":"ok","timestamp":1660694828748,"user_tz":180,"elapsed":328,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["model = GaussianNB()"],"metadata":{"id":"S2cLxl0tHYFq","executionInfo":{"status":"ok","timestamp":1660694830986,"user_tz":180,"elapsed":298,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rS1SxoE7HYOL","executionInfo":{"status":"ok","timestamp":1660694870863,"user_tz":180,"elapsed":294,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"020c05c2-70bd-4296-aaa0-121e61b05ac8"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GaussianNB()"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ozoV7BHyHYRJ","executionInfo":{"status":"ok","timestamp":1660694898634,"user_tz":180,"elapsed":317,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"76c0db8c-6ed3-452b-e351-7f83d25a4d2f"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n","       0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n","       0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,\n","       0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["accuracy = accuracy_score(y_test, y_pred)\n","accuracy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PosDMK62HYT8","executionInfo":{"status":"ok","timestamp":1660694909907,"user_tz":180,"elapsed":281,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"0c92e9d8-d048-4306-e963-3b36f1acdb18"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7445887445887446"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","\n","confusion_matrix(y_test, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YXX1fpaqHYWx","executionInfo":{"status":"ok","timestamp":1660694922889,"user_tz":180,"elapsed":4,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"27e5fa0f-03a9-4fdf-d6ba-ebb74dc61e6e"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[119,  32],\n","       [ 27,  53]])"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["import seaborn as sns; sns.set()\n","from sklearn.metrics import confusion_matrix\n","\n","mat = confusion_matrix(y_test, y_pred\n","                      )\n","sns.heatmap(mat.T, \n","            square = True, \n","            annot = True, \n","            fmt = 'd', \n","            cbar = True\n","           )\n","\n","plt.ylabel('Verdadeiros')\n","plt.xlabel('Previstos');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"o9TXlVJyHYZr","executionInfo":{"status":"ok","timestamp":1660694933099,"user_tz":180,"elapsed":487,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"51490fba-e791-4ee2-b896-fdc4c2b6c4be"},"execution_count":74,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["fpr_nb, tpr_nb, thr_nb = roc_curve(y_test, \n","                                 y_pred\n","                                )"],"metadata":{"id":"0T0rcDW2IbSg","executionInfo":{"status":"ok","timestamp":1660694943760,"user_tz":180,"elapsed":2,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":75,"outputs":[]},{"cell_type":"code","source":["plt.axis([0, 1.01, 0, 1.01])\n","\n","plt.xlabel('1 - Specificty')\n","\n","plt.ylabel('TPR / Sensitivity')\n","\n","plt.title('ROC Curve')\n","\n","plt.plot(fpr_nb, tpr_nb)\n","\n","plt.plot(np.arange(0,1, step =0.01), \n","         np.arange(0,1, step =0.01)\n","        )\n","\n","plt.legend(['NB'])\n","\n","plt.show() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"8eSQuw_qIbVV","executionInfo":{"status":"ok","timestamp":1660694954144,"user_tz":180,"elapsed":795,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"9030fc8e-e450-4ee5-b666-1ba3f187d760"},"execution_count":76,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print('AUC=', auc(fpr_nb, \n","                  tpr_nb\n","                 )\n","     )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uoGk6XYKIbYJ","executionInfo":{"status":"ok","timestamp":1660694962548,"user_tz":180,"elapsed":278,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"b7a960dd-e5c7-4482-d0ab-ae7178c91fd6"},"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["AUC= 0.7252897350993377\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_score\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score"],"metadata":{"id":"i6FL9MmwIbar","executionInfo":{"status":"ok","timestamp":1660694974197,"user_tz":180,"elapsed":295,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"3NmOtrsRIbdL","executionInfo":{"status":"ok","timestamp":1660695002894,"user_tz":180,"elapsed":12362,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"5e482940-2fcf-422b-d268-f00ac6dadd7a"},"execution_count":79,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-6105e849-ae65-4d31-b2a7-1e09830a8b0c\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-6105e849-ae65-4d31-b2a7-1e09830a8b0c\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving winequality-red.csv to winequality-red.csv\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('winequality-red.csv')"],"metadata":{"id":"kZgxty2nIbfF","executionInfo":{"status":"ok","timestamp":1660695017577,"user_tz":180,"elapsed":294,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"habyMyleIbhW","executionInfo":{"status":"ok","timestamp":1660695023216,"user_tz":180,"elapsed":21,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"bec2af45-9012-43f1-e316-1da4e0a9f6d3"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n","0               7.4             0.700         0.00             1.9      0.076   \n","1               7.8             0.880         0.00             2.6      0.098   \n","2               7.8             0.760         0.04             2.3      0.092   \n","3              11.2             0.280         0.56             1.9      0.075   \n","4               7.4             0.700         0.00             1.9      0.076   \n","...             ...               ...          ...             ...        ...   \n","1594            6.2             0.600         0.08             2.0      0.090   \n","1595            5.9             0.550         0.10             2.2      0.062   \n","1596            6.3             0.510         0.13             2.3      0.076   \n","1597            5.9             0.645         0.12             2.0      0.075   \n","1598            6.0             0.310         0.47             3.6      0.067   \n","\n","      free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n","0                    11.0                  34.0  0.99780  3.51       0.56   \n","1                    25.0                  67.0  0.99680  3.20       0.68   \n","2                    15.0                  54.0  0.99700  3.26       0.65   \n","3                    17.0                  60.0  0.99800  3.16       0.58   \n","4                    11.0                  34.0  0.99780  3.51       0.56   \n","...                   ...                   ...      ...   ...        ...   \n","1594                 32.0                  44.0  0.99490  3.45       0.58   \n","1595                 39.0                  51.0  0.99512  3.52       0.76   \n","1596                 29.0                  40.0  0.99574  3.42       0.75   \n","1597                 32.0                  44.0  0.99547  3.57       0.71   \n","1598                 18.0                  42.0  0.99549  3.39       0.66   \n","\n","      alcohol  quality  \n","0         9.4        5  \n","1         9.8        5  \n","2         9.8        5  \n","3         9.8        6  \n","4         9.4        5  \n","...       ...      ...  \n","1594     10.5        5  \n","1595     11.2        6  \n","1596     11.0        6  \n","1597     10.2        5  \n","1598     11.0        6  \n","\n","[1599 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-b6f28ea4-dc47-4435-a888-4b94324d1bb2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>fixed acidity</th>\n","      <th>volatile acidity</th>\n","      <th>citric acid</th>\n","      <th>residual sugar</th>\n","      <th>chlorides</th>\n","      <th>free sulfur dioxide</th>\n","      <th>total sulfur dioxide</th>\n","      <th>density</th>\n","      <th>pH</th>\n","      <th>sulphates</th>\n","      <th>alcohol</th>\n","      <th>quality</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7.4</td>\n","      <td>0.700</td>\n","      <td>0.00</td>\n","      <td>1.9</td>\n","      <td>0.076</td>\n","      <td>11.0</td>\n","      <td>34.0</td>\n","      <td>0.99780</td>\n","      <td>3.51</td>\n","      <td>0.56</td>\n","      <td>9.4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.8</td>\n","      <td>0.880</td>\n","      <td>0.00</td>\n","      <td>2.6</td>\n","      <td>0.098</td>\n","      <td>25.0</td>\n","      <td>67.0</td>\n","      <td>0.99680</td>\n","      <td>3.20</td>\n","      <td>0.68</td>\n","      <td>9.8</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.8</td>\n","      <td>0.760</td>\n","      <td>0.04</td>\n","      <td>2.3</td>\n","      <td>0.092</td>\n","      <td>15.0</td>\n","      <td>54.0</td>\n","      <td>0.99700</td>\n","      <td>3.26</td>\n","      <td>0.65</td>\n","      <td>9.8</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.2</td>\n","      <td>0.280</td>\n","      <td>0.56</td>\n","      <td>1.9</td>\n","      <td>0.075</td>\n","      <td>17.0</td>\n","      <td>60.0</td>\n","      <td>0.99800</td>\n","      <td>3.16</td>\n","      <td>0.58</td>\n","      <td>9.8</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.4</td>\n","      <td>0.700</td>\n","      <td>0.00</td>\n","      <td>1.9</td>\n","      <td>0.076</td>\n","      <td>11.0</td>\n","      <td>34.0</td>\n","      <td>0.99780</td>\n","      <td>3.51</td>\n","      <td>0.56</td>\n","      <td>9.4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1594</th>\n","      <td>6.2</td>\n","      <td>0.600</td>\n","      <td>0.08</td>\n","      <td>2.0</td>\n","      <td>0.090</td>\n","      <td>32.0</td>\n","      <td>44.0</td>\n","      <td>0.99490</td>\n","      <td>3.45</td>\n","      <td>0.58</td>\n","      <td>10.5</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1595</th>\n","      <td>5.9</td>\n","      <td>0.550</td>\n","      <td>0.10</td>\n","      <td>2.2</td>\n","      <td>0.062</td>\n","      <td>39.0</td>\n","      <td>51.0</td>\n","      <td>0.99512</td>\n","      <td>3.52</td>\n","      <td>0.76</td>\n","      <td>11.2</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1596</th>\n","      <td>6.3</td>\n","      <td>0.510</td>\n","      <td>0.13</td>\n","      <td>2.3</td>\n","      <td>0.076</td>\n","      <td>29.0</td>\n","      <td>40.0</td>\n","      <td>0.99574</td>\n","      <td>3.42</td>\n","      <td>0.75</td>\n","      <td>11.0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1597</th>\n","      <td>5.9</td>\n","      <td>0.645</td>\n","      <td>0.12</td>\n","      <td>2.0</td>\n","      <td>0.075</td>\n","      <td>32.0</td>\n","      <td>44.0</td>\n","      <td>0.99547</td>\n","      <td>3.57</td>\n","      <td>0.71</td>\n","      <td>10.2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1598</th>\n","      <td>6.0</td>\n","      <td>0.310</td>\n","      <td>0.47</td>\n","      <td>3.6</td>\n","      <td>0.067</td>\n","      <td>18.0</td>\n","      <td>42.0</td>\n","      <td>0.99549</td>\n","      <td>3.39</td>\n","      <td>0.66</td>\n","      <td>11.0</td>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1599 rows × 12 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6f28ea4-dc47-4435-a888-4b94324d1bb2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b6f28ea4-dc47-4435-a888-4b94324d1bb2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b6f28ea4-dc47-4435-a888-4b94324d1bb2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["df['quality'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3phUwIfsIbjv","executionInfo":{"status":"ok","timestamp":1660695036761,"user_tz":180,"elapsed":305,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"6aefcd40-cada-47a6-c1ef-ce27f61e7642"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 7, 4, 8, 3])"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["df.sample(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"v3LYv7AkIbmh","executionInfo":{"status":"ok","timestamp":1660695047017,"user_tz":180,"elapsed":299,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"d6e9d44c-9e5f-416a-c2bf-97028b5f8e14"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n","858           11.7              0.28         0.47             1.7      0.054   \n","0              7.4              0.70         0.00             1.9      0.076   \n","588            5.0              0.42         0.24             2.0      0.060   \n","\n","     free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n","858                 17.0                  32.0  0.99686  3.15       0.67   \n","0                   11.0                  34.0  0.99780  3.51       0.56   \n","588                 19.0                  50.0  0.99170  3.72       0.74   \n","\n","     alcohol  quality  \n","858     10.6        7  \n","0        9.4        5  \n","588     14.0        8  "],"text/html":["\n","  <div id=\"df-955bc965-ffe3-4329-933d-9ff253f25505\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>fixed acidity</th>\n","      <th>volatile acidity</th>\n","      <th>citric acid</th>\n","      <th>residual sugar</th>\n","      <th>chlorides</th>\n","      <th>free sulfur dioxide</th>\n","      <th>total sulfur dioxide</th>\n","      <th>density</th>\n","      <th>pH</th>\n","      <th>sulphates</th>\n","      <th>alcohol</th>\n","      <th>quality</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>858</th>\n","      <td>11.7</td>\n","      <td>0.28</td>\n","      <td>0.47</td>\n","      <td>1.7</td>\n","      <td>0.054</td>\n","      <td>17.0</td>\n","      <td>32.0</td>\n","      <td>0.99686</td>\n","      <td>3.15</td>\n","      <td>0.67</td>\n","      <td>10.6</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>7.4</td>\n","      <td>0.70</td>\n","      <td>0.00</td>\n","      <td>1.9</td>\n","      <td>0.076</td>\n","      <td>11.0</td>\n","      <td>34.0</td>\n","      <td>0.99780</td>\n","      <td>3.51</td>\n","      <td>0.56</td>\n","      <td>9.4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>588</th>\n","      <td>5.0</td>\n","      <td>0.42</td>\n","      <td>0.24</td>\n","      <td>2.0</td>\n","      <td>0.060</td>\n","      <td>19.0</td>\n","      <td>50.0</td>\n","      <td>0.99170</td>\n","      <td>3.72</td>\n","      <td>0.74</td>\n","      <td>14.0</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-955bc965-ffe3-4329-933d-9ff253f25505')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-955bc965-ffe3-4329-933d-9ff253f25505 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-955bc965-ffe3-4329-933d-9ff253f25505');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"inca_0nnIbo3","executionInfo":{"status":"ok","timestamp":1660695058288,"user_tz":180,"elapsed":274,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"f1d81c49-4970-47b4-95d8-4b28bdb82d52"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n","       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',\n","       'pH', 'sulphates', 'alcohol', 'quality'],\n","      dtype='object')"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["X = df[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',\n","       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',\n","       'pH', 'sulphates', 'alcohol'\n","       ]\n","      ]"],"metadata":{"id":"s7hgmZ9WIbrv","executionInfo":{"status":"ok","timestamp":1660695066290,"user_tz":180,"elapsed":3,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["y = df['quality']"],"metadata":{"id":"MrnZFfZ_IbuM","executionInfo":{"status":"ok","timestamp":1660695074668,"user_tz":180,"elapsed":286,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, \n","                                                    y, \n","                                                    test_size = 0.25, \n","                                                    random_state = 53\n","                                                   )"],"metadata":{"id":"nV-aCAeBI-HR","executionInfo":{"status":"ok","timestamp":1660695086545,"user_tz":180,"elapsed":310,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":87,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score\n","\n","svc_C = [0.1, 0.2, 0.3, 0.4, 0.5]\n","\n","error_rates = {}\n","\n","for c in svc_C:\n","        model_svc = SVC(kernel = 'linear', \n","                        class_weight = 'balanced', \n","                        C = c\n","                       )\n","        print (np.mean(cross_val_score(model_svc, \n","                                       X_train, \n","                                       y_train, \n","                                       cv = 5\n","                                      )\n","                      ),\n","               ' C:', c\n","              )\n","        \n","        error = 1 - np.mean(cross_val_score(model_svc, \n","                                            X_train, \n","                                            y_train, \n","                                            cv = 5\n","                                           )\n","                           )\n","        error_rates.update({(c): error})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JYS97hssI-KP","executionInfo":{"status":"ok","timestamp":1660695116917,"user_tz":180,"elapsed":24388,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"96c54221-7978-4c55-8464-9f05dea4135b"},"execution_count":88,"outputs":[{"output_type":"stream","name":"stdout","text":["0.31855299860529984  C: 0.1\n","0.3427405857740585  C: 0.2\n","0.3444211994421199  C: 0.3\n","0.3410774058577406  C: 0.4\n","0.3519246861924686  C: 0.5\n"]}]},{"cell_type":"code","source":["print(error_rates)\n","min(error_rates, key = error_rates.get)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gfzSQKAaI-M5","executionInfo":{"status":"ok","timestamp":1660695173637,"user_tz":180,"elapsed":271,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"b69f3abc-edf0-4999-8a74-12cfd48f3a8a"},"execution_count":89,"outputs":[{"output_type":"stream","name":"stdout","text":["{0.1: 0.6814470013947002, 0.2: 0.6572594142259415, 0.3: 0.6555788005578801, 0.4: 0.6589225941422594, 0.5: 0.6480753138075315}\n"]},{"output_type":"execute_result","data":{"text/plain":["0.5"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["optimalC = min(error_rates, key = error_rates.get)"],"metadata":{"id":"GeINcU-pI-Pi","executionInfo":{"status":"ok","timestamp":1660695183039,"user_tz":180,"elapsed":275,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":90,"outputs":[]},{"cell_type":"code","source":["best_model = SVC(C = optimalC, \n","                 kernel = 'linear'\n","                )"],"metadata":{"id":"I1GRBoHyI-SF","executionInfo":{"status":"ok","timestamp":1660695191331,"user_tz":180,"elapsed":290,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["best_model.fit(X_train, \n","               y_train\n","              )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4yZF7I33I-Us","executionInfo":{"status":"ok","timestamp":1660695206796,"user_tz":180,"elapsed":7284,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"5a1ada06-3d0d-42a2-f58b-e4a632968145"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=0.5, kernel='linear')"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["y_pred = best_model.predict(X_test)"],"metadata":{"id":"qBif77JyI-Xb","executionInfo":{"status":"ok","timestamp":1660695210900,"user_tz":180,"elapsed":283,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","\n","print(classification_report(y_test, \n","                            y_pred,\n","                            zero_division = 0\n","                           )\n","     )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7mFtmag4I-aL","executionInfo":{"status":"ok","timestamp":1660695222184,"user_tz":180,"elapsed":309,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"4283424f-6817-4cd9-9381-8f44ac9b25bb"},"execution_count":94,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           3       0.00      0.00      0.00         4\n","           4       0.00      0.00      0.00        16\n","           5       0.69      0.79      0.74       173\n","           6       0.51      0.70      0.59       147\n","           7       0.00      0.00      0.00        55\n","           8       0.00      0.00      0.00         5\n","\n","    accuracy                           0.60       400\n","   macro avg       0.20      0.25      0.22       400\n","weighted avg       0.49      0.60      0.53       400\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","print(confusion_matrix(y_test, \n","                       y_pred\n","                      )\n","     )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fwhe6NxgI-cx","executionInfo":{"status":"ok","timestamp":1660695231599,"user_tz":180,"elapsed":311,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"64eebec5-00c3-4b5b-e038-9ae57de4c9f9"},"execution_count":95,"outputs":[{"output_type":"stream","name":"stdout","text":["[[  0   0   3   1   0   0]\n"," [  0   0  11   5   0   0]\n"," [  0   0 136  37   0   0]\n"," [  0   0  44 103   0   0]\n"," [  0   0   3  52   0   0]\n"," [  0   0   0   5   0   0]]\n"]}]},{"cell_type":"code","source":["import seaborn as sns; sns.set()\n","from sklearn.metrics import confusion_matrix\n","import matplotlib.pyplot as plt\n","\n","mat = confusion_matrix(y_test, \n","                       y_pred\n","                      )\n","sns.heatmap(mat.T, \n","            square = True, \n","            annot = True, \n","            fmt = 'd', \n","            cbar = True\n","           )\n","\n","plt.xlabel('true label')\n","plt.ylabel('predicted label');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"zqAhbpRsJkRh","executionInfo":{"status":"ok","timestamp":1660695242346,"user_tz":180,"elapsed":787,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"6be54e30-6629-4c54-eaee-4472d28b0e4d"},"execution_count":96,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["accuracy_score(y_test, \n","               y_pred\n","              )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zJeKeYobJkUe","executionInfo":{"status":"ok","timestamp":1660695250769,"user_tz":180,"elapsed":291,"user":{"displayName":"Diego Soares de Oliveira","userId":"15023540212804804090"}},"outputId":"d0855cb0-badf-4395-c318-fa482b0f1fdb"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5975"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":[""],"metadata":{"id":"IiYIknFcJkXG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"xCbqanZxJkZo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"8YHLn-lMJkcU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"WI9QBHw6Jke3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"b3ONkmV6Jkjf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"tIeI1jzCJkmL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"91UzZUP_I-fW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"XjZQEPseEN9b"},"execution_count":null,"outputs":[]}]}